<Window x:Class="GameOfLife.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:local="clr-namespace:GameOfLife"
        mc:Ignorable="d"
        WindowState="Maximized"
        Title="Game of Life"
        Background="Black" 
        Closing="WindowClosing"
        MinHeight="600"
        MinWidth="800"
        Icon="/images/flag.ico">

    <Window.Resources>
        <Style x:Key="Flat" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="#F44336" BorderThickness="0" Padding="5, 5" Margin="0,3,0,3">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="White"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#95a5a6"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#e74c3c"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#e74c3c"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="15*"></RowDefinition>
            <RowDefinition Height="6*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" x:Name="BoardGrid">

        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/> <!-- Time label -->
                <ColumnDefinition Width="4*"/> <!-- Slider -->
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="0.5*"/> 
                <ColumnDefinition Width="16*"/> <!-- GRAPH -->
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="4*"></RowDefinition>
                <RowDefinition Height="10*"></RowDefinition>
                <RowDefinition Height="3*"></RowDefinition>
            </Grid.RowDefinitions>


            <Button Name="StartButton" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Content="Play" Click="ButtonPlayClick" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5 0 0 0" Width="40" Height="40">
                <Button.Template>
                    <ControlTemplate>
                        <Image Source="/images/play.png"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button Name="PauseButton" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Content="Pause" Click="ButtonPauseClick" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="55 0 0 0" Width="40" Height="40">
                <Button.Template>
                    <ControlTemplate>
                        <Image Source="/images/pause.png"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button Name="StopButton" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Content="Stop" Click="ButtonStopClick" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="105 0 0 0" Width="40" Height="40">
                <Button.Template>
                    <ControlTemplate>
                        <Image Source="/images/stop.png"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            BorderBrush="Black" BorderThickness="0"  Grid.Row="1" Grid.Column="0">
                <StackPanel VerticalAlignment="Center" Margin="5,0,3,0">
                    <xctk:IntegerUpDown x:Name="IntegerUpDownWidth" Value="10" Maximum="100" Minimum="10" ValueChanged="IntegerUpDownWidthValueChanged" Margin="0,0,0,5"/>
                    <Button Style="{StaticResource Flat}" x:Name="ButtonRandom" FontSize="12" Foreground="Black" Background="White" VerticalAlignment="Center" Click="ButtonRandomClick">Random board</Button>
                    <Button Style="{StaticResource Flat}" x:Name="ButtonClear"  FontSize="12" Foreground="Black" Background="White" VerticalAlignment="Center" Click="ButtonClearClick">Clear board</Button>
                 </StackPanel>
            </Border>

            <Border BorderBrush="Black" BorderThickness="0"  Grid.Row="1" Grid.Column="1">
                <StackPanel VerticalAlignment="Center" Margin="3,0,0,0">
                    <xctk:IntegerUpDown x:Name="IntegerUpDownHeight" Value="10" Maximum="100" Minimum="10" ValueChanged="IntegerUpDownHeightValueChanged" Margin="0,0,0,5"/>
                    <Button Style="{StaticResource Flat}" x:Name="ButtonSave" FontSize="12" Foreground="Black" Background="White" Click="ButtonSaveClick">Save board</Button>
                    <Button Style="{StaticResource Flat}" x:Name="ButtonRestore" FontSize="12" Foreground="Black" Background="White" Click="ButtonRestoreClick">Restore board</Button>
                </StackPanel>
            </Border>

            <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Foreground="White" Text="Time" FontSize="15" Margin="5,0,0,0"/>
            <Slider Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="SliderTime" TickFrequency="1" IsSnapToTickEnabled="True" Margin="50,0,30,0" VerticalAlignment="Center" Minimum="100" Maximum="1500" Value="{Binding ElementName=txtSliderTime, Path=Text}" ValueChanged="SliderValueChanged" />
            <TextBlock Grid.Row="2" Grid.Column="1" x:Name="txtSliderTime" VerticalAlignment="Center" Foreground="White" FontSize="15" HorizontalAlignment="Right" Text="{Binding ElementName=SliderTime, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>

            <lvc:CartesianChart Series="{Binding AgePyramid}" Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" Margin="20,20,0,0">

            </lvc:CartesianChart>

            <lvc:CartesianChart Series="{Binding PlotIterationCell}" Grid.Row="0" Grid.Column="6" Grid.RowSpan="3" Margin="0,20,0,0">
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis MinValue="0"></lvc:Axis>
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>

        </Grid>
        
    </Grid>
</Window>
